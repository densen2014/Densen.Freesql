@page "/fetchdata"
@using BlazorApp1.Data

<PageTitle>Weather forecast</PageTitle>

<AmeBlazor.Components.TablePollo TItem="Cagetory"
                                 IncludeByPropertyNames="@IncludeByPropertyNames"
                                 ItemDetails="NullClass"
                                 ItemDetailsII="NullClass"
                                 EnableCascadeSave
                                 />

@code {


    // 由于使用了FreeSql ORM 数据服务,可以直接取对象
    [Inject] IFreeSql? fsql { get; set; }
    [Inject] ToastService? toastService { get; set; }

    List<string> IncludeByPropertyNames = new List<string> {
                nameof(Cagetory.Childs) ,
            };

    //用演示服务的数据初始化数据库
    [Inject] WeatherForecastService? ForecastService { get; set; }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            return;

            var repo = fsql.GetRepository<Cagetory>();
            repo.DbContextOptions.EnableCascadeSave = true;
            var cts = new[]
            {
            new Cagetory
            {
                Name = "分类1",
                Childs = new List<Cagetory>(new[]
            {
                            new Cagetory { Name = "分类1_1" },
                            new Cagetory { Name = "分类1_2" },
                            new Cagetory { Name = "分类1_3" }
                        })
                    },
                    new Cagetory
                    {
                        Name = "分类2",
                        Childs = new List<Cagetory>(new[]
            {
                            new Cagetory { Name = "分类2_1" },
                            new Cagetory { Name = "分类2_2" }
                        })
                    }
                };
            repo.Insert(cts);


            //检测一个导航属性是否有效：

            var tbref = fsql!.CodeFirst
            .GetTableByEntity(typeof(WeatherForecast))
            .GetTableRef("Remark", true);

            //懒的人,直接初始化一些数据用用
            var res = fsql!.Select<WeatherForecast>().Count();
            if (1 == 1 || res == 0)
            {
                var forecasts = (await ForecastService!.GetForecastAsync(DateTime.Now)).ToList();
                //fsql.Insert<WeatherForecast>().AppendData(forecasts).ExecuteAffrows();
                var repof = fsql.GetRepository<WeatherForecast>();
                repof.DbContextOptions.EnableCascadeSave = true;
                repof.Insert(forecasts);

            }
        }
    }


}